group TransformObservationNGSAmplifikation(source src: CTS_Transport, source patient:Patient, target tgt: Observation)
{
       src -> tgt.id = uuid();
       src -> tgt.meta as meta collate, meta.profile = '?';
       src -> tgt.status = 'active';

       src.operations as operations, operations.data as data then
       {
              //Fall-ID
              data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1600'" then
              {
                  values.value as fallID -> tgt.identifier = id('http://uk-koeln.de/fhir/NamingSystem/nNGM/fallnummer', fallID);
              };
              //Biopsy-ID
              data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1601'" then
              {
                  values.value as biopsyID -> tgt.identifier = id('http://uk-koeln.de/NamingSystem/nNGM/biopsienummer', biopsyID);
              };

             data.values as values where "blockindex = 1 and groupindex = 21 and itemid = 'id_2166".exists() then
             {
                 //assay meaning


                  //gene studied?


                  //amino acid chg?

             };
       }

//MET Amplifikation NGS Amplifikation
MET-Amplifikation-Expression.NGSAmplifikation.system = http://ncit.nci.nih.gov
MET-Amplifikation-Expression.NGSAmplifikation.code  = ?
MET-Amplifikation-Expression.NGSAmplifikation.display = Next Generation Sequencing
MET-Amplifikation-Expression.NGSAmplifikation.AssayBezeichnung = cc('','');
MET-Amplifikation-Expression.NGSAmplifikation.Hersteller = cc('','');
MET-Amplifikation-Expression.NGSAmplifikation.SOPVersionsnummerAmStandort = string?
MET-Amplifikation-Expression.NGSAmplifikation.StandortDreiBuchstabenKuerzel = coding/string?
MET-Amplifikation-Expression.NGSAmplifikation.Ergebnis = cc(); //positiv (high-level), positiv (moderate), negativ, nicht auswertbar
MET-Amplifikation-Expression.NGSAmplifikation.XFacheAmplifikation = amplification-factor?;
 
}