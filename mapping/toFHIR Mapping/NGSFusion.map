group TransformObservationNGSFusion(source src: CTS_Transport, source patient:Patient, target tgt: Observation)
{
       src -> tgt.id = uuid();
       src -> tgt.meta as meta collate, meta.profile = '?';
       src -> tgt.status = 'active';

       src.operations as operations, operations.data as data then
       {
              //Fall-ID
              data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1600'" then
              {
                  values.value as fallID -> tgt.identifier = id('http://uk-koeln.de/fhir/NamingSystem/nNGM/fallnummer', fallID);
              };
              //Biopsy-ID
              data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1601'" then
              {
                  values.value as biopsyID -> tgt.identifier = id('http://uk-koeln.de/NamingSystem/nNGM/biopsienummer', biopsyID);
              };
       }

//ALK Fusion NGSFusion
ALK-Fusion-Expression.NGSFusion.system = http://ncit.nci.nih.gov
ALK-Fusion-Expression.NGSFusion.code  = C101293
ALK-Fusion-Expression.NGSFusion.display = Next Generation Sequencing
ALK-Fusion-Expression.NGSFusion.AssayBezeichnung = cc('','');
ALK-Fusion-Expression.NGSFusion.Hersteller = cc('','');
ALK-Fusion-Expression.NGSFusion.StandortDreiBuchstabenKuerzel = coding/string?
ALK-Fusion-Expression.NGSFusion.SOPVersionsnummerAmStandort = string?
ALK-Fusion-Expression.NGSFusion.Ergebnis = cc();
ALK-Fusion-Expression.NGSFusion.Fusionsparner = cc();
ALK-Fusion-Expression.NGSFusion.AnzahlDerFusionReads = int value;
ALK-Fusion-Expression.NGSFusion.5'FusionspartnerExon = int value;
ALK-Fusion-Expression.NGSFusion.ALKExon = intvalue;

//RET Fusion NGSFusion
RET-Fusion-Expression.NGSFusion.system = http://ncit.nci.nih.gov
RET-Fusion-Expression.NGSFusion.code  = C101293
RET-Fusion-Expression.NGSFusion.display = Next Generation Sequencing
RET-Fusion-Expression.NGSFusion.AssayBezeichnung = cc('','');
RET-Fusion-Expression.NGSFusion.Hersteller = cc('','');
RET-Fusion-Expression.NGSFusion.StandortDreiBuchstabenKuerzel = coding/string?
RET-Fusion-Expression.NGSFusion.SOPVersionsnummerAmStandort = string?
RET-Fusion-Expression.NGSFusion.Ergebnis = cc();
RET-Fusion-Expression.NGSFusion.Fusionsparner = cc();
RET-Fusion-Expression.NGSFusion.AnzahlDerFusionReads = int value;
RET-Fusion-Expression.NGSFusion.5'FusionspartnerExon = int value;
RET-Fusion-Expression.NGSFusion.RETExon = intvalue;

//ROS1 Fusion NGSFusion
ROS1-Fusion-Expression.NGSFusion.system = http://ncit.nci.nih.gov
ROS1-Fusion-Expression.NGSFusion.code  = C101293
ROS1-Fusion-Expression.NGSFusion.display = Next Generation Sequencing
ROS1-Fusion-Expression.NGSFusion.KitBezeichnung = cc('','');
ROS1-Fusion-Expression.NGSFusion.Hersteller = cc('','');
ROS1-Fusion-Expression.NGSFusion.StandortDreiBuchstabenKuerzel = coding/string?
ROS1-Fusion-Expression.NGSFusion.SOPVersionsnummerAmStandort = string?
ROS1-Fusion-Expression.NGSFusion.Ergebnis = cc();
ROS1-Fusion-Expression.NGSFusion.Fusionsparner = cc();
ROS1-Fusion-Expression.NGSFusion.AnzahlDerFusionReads = int value;
ROS1-Fusion-Expression.NGSFusion.5'FusionspartnerExon = int value;
ROS1-Fusion-Expression.NGSFusion.ROS1Exon = int value;

//Fusion Sonstige NGS Fusion
Fusion.NGSFusion.system = http://ncit.nci.nih.gov
Fusion.NGSFusion.code  = C131071
Fusion.NGSFusion.display = ROS1 Fusion Positive
Fusion.NGSFusion.Assay = string;
Fusion.NGSFusion.Hersteller = string;
Fusion.NGSFusion.SOPNummerdesStandorts = string?
Fusion.NGSFusion.StandortDreiBuchstabenKuerzel = coding/string?
Fusion.NGSFusion.KeineAktivierendeFusionGefunden = binary;
Fusion.NGSFusion.ErsterFusionspartner = string;
Fusion.NGSFusion.ZweiterFusionspartner = string;
Fusion.NGSFusion.AnzahlDerFusionReads = valueInteger;
Fusion.NGSFusion.ExonErsterFusionspartner = fusionspartner-exon.valueinteger;
Fusion.NGSFusion.ExonZweiterFusionsPartner = fusionspartner-exon.valueinteger;

}
